[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "setuptools>=61.2",
    "setuptools_scm",
]

[project]
description = "Documentation of the BESIII Offline Software System"
dynamic = ["version"]
keywords = [
    "BESIII",
    "HEP",
    "IHEP",
    "particle physics",
    "particles",
    "physics",
]
license = {text = "GPLv3 or later"}
name = "bossdoc"
requires-python = ">=3.12"

[project.readme]
content-type = "text/markdown"
file = "README.md"

[project.urls]
Changelog = "https://github.com/redeboer/bossdoc/releases"
Documentation = "http://bes3.rtfd.io"
Source = "https://github.com/redeboer/bossdoc"
Tracker = "https://github.com/redeboer/bossdoc/issues"

[dependency-groups]
dev = [
    "ruff",
    "sphinx-autobuild",
    {include-group = "doc"},
    {include-group = "style"},
]
doc = [
    "myst-nb",
    "sphinx",
    "sphinx-api-relink",
    "sphinx-book-theme",
    "sphinx-comments",
    "sphinx-copybutton",
    "sphinx-design",
    "sphinx-pybtex-etal-style",
    "sphinx-togglebutton",
    "sphinxcontrib-bibtex >=2",
]
style = ["sphinx-api-relink"]

[tool.setuptools]
include-package-data = false

[tool.setuptools_scm]
local_scheme = "no-local-version"
version_scheme = "only-version"
write_to = "version.py"

[tool.pyright]
exclude = [
    "**/.venv/",
    ".git",
    ".tox",
    "docs/_build",
]
include = [
    "docs/conf.py",
    "src",
    "tests",
]
reportGeneralTypeIssues = false
reportMissingParameterType = false
reportMissingTypeStubs = false
reportUnboundVariable = false
reportUnknownArgumentType = false
reportUnknownMemberType = false
reportUnknownParameterType = false
reportUnknownVariableType = false
reportUnusedClass = true
reportUnusedFunction = true
reportUnusedImport = true
reportUnusedVariable = true
typeCheckingMode = "strict"
venv = ".venv"
venvPath = "."

[tool.ruff]
extend-exclude = ["typings"]
preview = true
show-fixes = true

[tool.ruff.format]
docstring-code-format = true
line-ending = "lf"

[tool.ruff.lint]
ignore = [
    "ANN401",
    "COM812",
    "CPY001",
    "D101",
    "D102",
    "D103",
    "D105",
    "D107",
    "D203",
    "D213",
    "D407",
    "D416",
    "DOC",
    "E501",
    "FURB101",
    "FURB103",
    "FURB140",
    "G004",
    "ISC001",
    "PLW1514",
    "PT001",
    "PTH",
    "SIM108",
    "UP036",
]
select = ["ALL"]
task-tags = ["cspell"]

[tool.ruff.lint.isort]
split-on-trailing-comma = false

[tool.ruff.lint.per-file-ignores]
"docs/*" = [
    "E402",
    "INP001",
    "S101",
    "S113",
    "T201",
]
"docs/conf.py" = [
    "A00",
    "B006",
    "D100",
    "PLC2701",
    "PLR0913",
]
"setup.py" = ["D100"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.tomlsort]
all = false
ignore_case = true
in_place = true
sort_first = [
    "build-system",
    "project",
    "tool.setuptools",
    "tool.setuptools_scm",
]
spaces_indent_inline_array = 4
trailing_comma_inline_array = true

[tool.tox]
legacy_tox_ini = """
[tox]
envlist =
    doc,
    linkcheck,
    sty,
skip_install = True
skip_missing_interpreters = True
skipsdist = True

[testenv]
passenv = *

[testenv:doc]
description = Build documentation through Sphinx
allowlist_externals =
    sphinx-build
commands =
    sphinx-build \
        --builder=dirhtml \
        --color \
        --fail-on-warning \
        --keep-going \
        --show-traceback \
        docs/ docs/_build/html
setenv =
    PYTHONWARNINGS =

[testenv:doclive]
allowlist_externals =
    sphinx-autobuild
commands =
    sphinx-autobuild \
        --builder=dirhtml \
        --ignore=docs/_build/ \
        --open-browser \
        --port=0 \
        --re-ignore='.*/__pycache__/.*' \
        --watch=docs \
        docs/ docs/_build/html
description = Set up a server to directly preview changes to the HTML pages
setenv =
    PYTHONWARNINGS =

[testenv:linkcheck]
allowlist_externals =
    sphinx-build
commands =
    sphinx-build \
        --builder=linkcheck \
        --color \
        --show-traceback \
        docs/ docs/_build/linkcheck
description = Check external links in the documentation (requires internet connection)
setenv =
    PYTHONWARNINGS =

[testenv:sty]
allowlist_externals =
    pre-commit
commands =
    pre-commit run --all-files {posargs}
description = Perform all linting, formatting, and spelling checks
"""
